buildscript {
    //noinspection GroovyAssignabilityCheck
    ext {
        springBootVersion = '1.2.5.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('org.flywaydb:flyway-gradle-plugin:3.2.1')
    }
}

plugins {
    id "org.asciidoctor.convert" version "1.5.2"
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'org.flywaydb.flyway'

//noinspection GroovyAssignabilityCheck
jar {
    baseName = 'demo'
    version = '0.0.1-SNAPSHOT'
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}
sourceCompatibility = 1.7
targetCompatibility = 1.7

repositories {
    mavenCentral()
}


dependencies {
    compile "org.springframework.boot:spring-boot-starter-data-jpa"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile 'org.flywaydb:flyway-core'
//    compile 'com.mangofactory:swagger-springmvc:1.0.2'
//    compile 'com.wordnik:swagger-annotations:1.3.12'
//    compile 'org.webjars:swagger-ui:2.0.12'

    runtime "org.postgresql:postgresql:9.4-1201-jdbc41"
    testCompile 'com.jayway.jsonpath:json-path'
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile 'org.springframework.restdocs:spring-restdocs:1.0.0.M1'
}


eclipse {
    classpath {
         containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
         containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.6'
}

task stage {
    dependsOn installDist
}

//noinspection GroovyAssignabilityCheck
flyway {
    url = 'jdbc:postgresql://localhost:5432/demo'
    user = 'postgres'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    systemProperty 'org.springframework.restdocs.outputDir', snippetsDir
    outputs.dir snippetsDir
}

asciidoctor {
    sourceDir 'src/main/asciidoc'
    attributes 'snippets': snippetsDir
    inputs.dir snippetsDir
    dependsOn test
}